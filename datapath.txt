module datapath(input clk, reset,
                input pcen, irwrite, regwrite,
                input alusrca, iord, memtoreg, regdst,
                input [1:0] alusrcb,
                input [1:0] pcsrc,
                input [2:0] alucontrol,
                output [5:0] op, funct,
                output zero,output [31:0] adr, writedata,
                input [23:0] readdata);// Internal signals of the datapath module
  wire [4:0] writereg;
  wire [23:0] pcnext, pc;
  wire [23:0] instr, data, srca, srcb;
  wire [23:0] a;
  wire [23:0] aluresult, aluout;
  wire [23:0] signimm; // the sign-extended immediate
  wire [23:0] signimmsh; // the sign-extended immediate shifted left by 2
  wire [23:0] wd3, rd1, rd2;

 
 // op and funct fields to controllerassign 
  op = instr[22:17];
  assign funct = instr[5:0];
  // datapath
  flopenr #(24) pcreg(clk, reset, pcen, pcnext, pc);
  mux2 #(24) adrmux(pc, aluout, iord, adr);
  flopenr #(24) instrreg(clk, reset, irwrite, readdata, instr);
  flopr #(24) datareg(clk, reset, readdata, data);
  mux2 #(5) regdstmux(instr[20:16], instr[15:11], regdst, writereg);
  mux2 #(24) wdmux(aluout, data, memtoreg, wd3);
  regfile rf(clk, regwrite, instr[25:21], instr[20:16],writereg, wd3, rd1, rd2);
  signext se(instr[15:0], signimm);
  sl2 immsh(signimm, signimmsh);
  flopr #(24) areg(clk, reset, rd1, a);
  flopr #(24) breg(clk, reset, rd2, writedata);
  mux2 #(24) srcamux(pc, a, alusrca, srca);
  mux4 #(24) srcbmux(writedata, 24'b100, signimm, signimmsh,alusrcb, srcb);
  alu alu(srca, srcb, alucontrol,aluresult, zero);
  flopr #(24) alureg(clk, reset, aluresult, aluout);
  mux3 #(24) pcmux(aluresult, aluout,{pc[23:22], instr[25:0], 2'b00}, pcsrc, pcnext);
endmodule