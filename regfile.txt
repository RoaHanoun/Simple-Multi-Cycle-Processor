module regfile(input clk,
               input we3,
               input [4:0] ra1, ra2,ra3,ra4,ra5,ra6,ra7 wa3,
               input [23:0] wd3,
               output [23:0] rd1, rd2,rd3,rd4,rd5,rd6,rd7);
  reg [31:0] rf[31:0];// 7 ported register file
  // read two ports combinationally
  // write third port on rising edge of clock
  // register 0 hardwired to 0
  always @(posedge clk)
    if (we3) rf[wa3] <= wd3;
  assign rd1 = (ra1 != 0) ? rf[ra1] : 0;
  assign rd2 = (ra2 != 0) ? rf[ra2] : 0;
  assign rd3 = (ra3 != 0) ? rf[ra3] : 0;
  assign rd4 = (ra4 != 0) ? rf[ra4] : 0;
  assign rd5 = (ra5 != 0) ? rf[ra5] : 0;
  assign rd6 = (ra6 != 0) ? rf[ra6] : 0;
  assign rd7 = (ra7 != 0) ? rf[ra7] : 0;
endmodule